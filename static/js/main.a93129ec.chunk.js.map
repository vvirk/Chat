{"version":3,"sources":["components/Footer/styles/Footer.module.scss","components/Header/styles/Header.module.scss","components/Login/styles/Login.module.scss","components/MessageInput/styles/MessageInput.module.scss","components/ChatList/Message/styles/Message.module.scss","components/Preloader/styles/Preloader.module.scss","components/Preloader/images/Spinner.svg","components/ChatList/Message/images/avatar.png","components/Login/Login.js","actions/index.js","actions/actionTypes.js","containers/LoginContainer.js","components/Preloader/Preloader.js","components/Header/Header.js","utils/getNumberOfUsers.js","utils/getLastMessageTime.js","containers/HeaderContainer.js","components/ChatList/Message/Message.js","containers/MessageContainer.js","components/ChatList/ChatList.js","containers/ChatListContainer.js","components/MessageInput/MessageInput.js","containers/MessageInputContainer.js","components/Footer/Footer.js","components/Chat/Chat.js","containers/ChatContainer.js","routes.js","App.js","reducers/reducer.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","useState","userName","setUserName","addUserName","className","s","wrap","inner","type","input","onChange","e","target","value","placeholder","to","btn","onClick","toggleIsFetching","isFetching","mapDispatchToProps","LoginContainer","connect","state","Preloader","src","Spinner","alt","Header","messages","logo","chatInfo","chatInfoNumberOf","users","usersList","Set","map","user","add","size","getNumberOfUsers","length","chatInfoLastMessage","lastMesage","created_at","getLastMessageTime","HeaderContainer","Message","toggleLike","likeMessages","deleteMessage","changeMessage","classWrap","classMessage","time","createdTime","info","classAvatar","avatar","desc","title","name","body","message","classLikeWrap","includes","id","messageLike","like","classNav","editBtn","deleteBtn","MessageContainer","ChatList","console","log","myMessageWrap","myMessage","messageLikeWrap","nav","key","ChatListContainer","newMessage","MessageInput","addMessage","sendMessage","editId","saveEditedMessage","editIndex","content","onKeyUp","keyCode","index","MessageInputContainer","f","Footer","navLink","href","copyright","Chat","this","getMessages","React","Component","dispatch","a","fetch","response","json","responseBody","ChatContainer","withRouter","MainRouter","path","exact","component","App","initialState","reducer","action","moment","format","i","editValue","messagesCopy","filter","indexOf","slice","Boolean","window","location","hostname","match","configureStore","createStore","applyMiddleware","thunk","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a93129ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Footer_wrap__2TAji\",\"inner\":\"Footer_inner__l97wy\",\"nav\":\"Footer_nav__YglWe\",\"navLink\":\"Footer_navLink__3hU9B\",\"copyright\":\"Footer_copyright__3ipED\",\"nav-link\":\"Footer_nav-link__2bfI6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Header_inner__2rzD1\",\"wrap\":\"Header_wrap__323Ed\",\"logo\":\"Header_logo__1On6H\",\"chatInfo\":\"Header_chatInfo__1Ai6u\",\"chatInfoNumberOf\":\"Header_chatInfoNumberOf__3EGpr\",\"chatInfoLastMessage\":\"Header_chatInfoLastMessage__1X1R8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__1maWs\",\"inner\":\"Login_inner__DuZ0e\",\"input\":\"Login_input__3J7qI\",\"btn\":\"Login_btn__lq-HH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"MessageInput_wrap__1sEft\",\"content\":\"MessageInput_content__1WO4E\",\"input\":\"MessageInput_input__2pOzp\",\"btn\":\"MessageInput_btn__17lhZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Message_wrap__3cCAd\",\"message\":\"Message_message__8rwGc\",\"inner\":\"Message_inner__6_mus\",\"time\":\"Message_time__1b142\",\"info\":\"Message_info__2276t\",\"desc\":\"Message_desc__3csGN\",\"title\":\"Message_title__1oiQ5\",\"body\":\"Message_body__1CEZI\",\"messageLike\":\"Message_messageLike__1F8pn\",\"messageLikeWrap\":\"Message_messageLikeWrap__Iw79J\",\"like\":\"Message_like__2ShJA\",\"myMessage\":\"Message_myMessage__1Ex2g\",\"myMessageWrap\":\"Message_myMessageWrap__sbHAA\",\"avatar\":\"Message_avatar__kxtqF\",\"nav\":\"Message_nav__2EA8E\",\"deleteBtn\":\"Message_deleteBtn__1F5ep\",\"editBtn\":\"Message_editBtn__3GYQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Preloader_wrap__1sVqL\",\"inner\":\"Preloader_inner__2VW6Y\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner.315ddeed.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.0a5e7a1f.png\";","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n//styles\nimport s from './styles/Login.module.scss';\n\nexport const Login = props => {\n  const [userName, setUserName] = useState(\"\");\n  const { addUserName } = props;\n  return (\n    <div className={s.wrap}>\n      <div className={s.inner}>\n        <input \n          type=\"text\"\n          className={s.input}\n          onChange={e => setUserName(e.target.value)}\n          placeholder=\"Please, enter your name\"\n        />\n        <Link\n          to={userName ? \"/chat\" : \"#\"}\n          className={s.btn}\n          onClick={()=>addUserName(userName)}\n        >\n         Login\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import * as type from '../actions/actionTypes';\n\nexport const addMessages = messages => ({\n  type: type.ADD_MESSAGES,\n  messages,\n});\n\nexport const addMessage = message => ({\n  type: type.ADD_MESSAGE,\n  message,\n});\n\nexport const toggleIsFetching = isFetching => ({\n  type: type.TOGGLE_IS_FETSHING,\n  isFetching,\n});\n  \nexport const getMessages = () => async dispatch => {\n  try {\n    dispatch(toggleIsFetching(true));\n    const url = 'https://api.dev.buki.com.ua/frontend_test';\n    const response = await fetch(url);\n    const responseBody = await response.json();\n    dispatch(addMessages(responseBody));\n    dispatch(toggleIsFetching(false));\n } catch(e) {console.log(e)}\n};\n\nexport const sendMessage = message => ({\n  type: type.SEND_MESSAGE,\n  message,\n});\n\nexport const addUserName = userName => ({\n  type: type.ADD_USER_NAME,\n  userName,\n});\n\nexport const toggleLike = id => ({\n  type: type.TOGGLE_LIKE,\n  id,\n});\n\nexport const deleteMessage = id => ({\n  type: type.DELETE_MESSAGE,\n  id,\n});\n\nexport const addEditId = id => ({\n  type: type.ADD_EDIT_ID,\n  id,\n});\n\nexport const changeMessage = id => ({\n  type: type.CHANGE_MESSAGE,\n  id,\n});\n\nexport const saveEditedMessage = (message, index) => ({\n  type: type.SAVE_EDITED_MESSAGE,\n  message, \n  index,\n});","export const ADD_MESSAGES = 'ADD_MESSAGES';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const TOGGLE_IS_FETSHING = 'TOGGLE_IS_FETSHING';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const ADD_USER_NAME = 'ADD_USER_NAME';\nexport const TOGGLE_LIKE = 'TOGGLE_LIKE';\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';\nexport const CHANGE_MESSAGE = 'CHANGE_MESSAGE';\nexport const SAVE_EDITED_MESSAGE = 'SAVE_EDITED_MESSAGE';\nexport const ADD_EDIT_ID = 'ADD_EDIT_ID';","import { connect } from 'react-redux';\nimport Login from '../components/Login/Login';\nimport { addUserName } from '../actions/index';\n\nconst mapStateToProps = state => ({\n});\nconst mapDispatchToProps = {\n    addUserName,\n};\nexport const LoginContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Login);\n\nexport default LoginContainer;\n","import React from 'react';\n// styles\nimport s from './styles/Preloader.module.scss';\n// images\nimport Spinner from './images/Spinner.svg';\n\nexport const Preloader = () => (\n  <div className={s.wrap}>\n    <div className={s.inner}>\n      <img src={Spinner} alt=\"Spinner\" />\n    </div>\n  </div>\n);\n\nexport default Preloader;\n","import React from 'react';\nimport { getLastMessageTime } from '../../utils/getLastMessageTime';\nimport { getNumberOfUsers } from '../../utils/getNumberOfUsers';\n\n//styles\nimport s from './styles/Header.module.scss';\n\nexport const Header = props => {\n  const { messages } = props;\n  return ( \n    <header className={s.wrap}>\n      <div className=\"content\">\n        <div className={s.inner}>\n          <div className={s.logo}>\n            My chat\n          </div>\n          <div className={s.chatInfo}>\n            <div className={s.chatInfoNumberOf}>\n              {getNumberOfUsers(messages)} users &nbsp;\n              {messages.length} messages\n            </div>\n            <div className={s.chatInfoLastMessage}>\n              Last message: {getLastMessageTime(messages)}\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","// This function is required to calculate the number of unique users\nexport const getNumberOfUsers = users => {\n  const usersList = new Set();\n    if (users) {\n      users.map(user => usersList.add(user.user))\n      return usersList.size\n    }\n}","//The function is required to get the date and time of the last message\nexport const getLastMessageTime = messages => {\n  const lastMesage = messages.length - 1;\n    if (messages[lastMesage]) {\n      return messages[lastMesage].created_at\n    }\n}","import { connect } from 'react-redux';\nimport Header from '../components/Header/Header';\n\nconst mapStateToProps = state => ({\n  messages: state.messages,\n});\nconst mapDispatchToProps = {};\nexport const HeaderContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n\nexport default HeaderContainer;\n\n","import React from 'react';\n\n//styles\nimport s from './styles/Message.module.scss';\n\nexport const Message = props => {\n  const { \n    toggleLike, \n    likeMessages, \n    deleteMessage,\n    changeMessage,\n  } = props;\n  return (\n    <li className={props.classWrap}>\n      <div className={props.classMessage}>\n        <div className={s.time}>\n          {props.createdTime}\n        </div>\n        <div className={s.inner}>\n          <div className={s.info}>\n            <div className={props.classAvatar}>\n              <img src={props.avatar} alt=\"avatar\" />\n            </div>\n            <div className={s.desc}>\n              <h2 className={s.title}>{props.name}</h2>\n              <div className={s.body}>{props.message}</div>\n            </div>\n          </div>\n          <div className={props.classLikeWrap}>\n            <div \n              className={(likeMessages.includes(props.id)) \n                ? `${s.messageLike} ${s.like}` : s.messageLike }\n              onClick={(e)=> toggleLike(e.target.id)}\n              id={props.id}\n            >\n              &#9829;\n            </div>\n          </div>\n          <nav className={props.classNav}>\n            <div \n             className={s.editBtn}\n             id={props.id}\n             title=\"edit message\"\n             onClick={(e)=> changeMessage(e.target.id)}\n            >\n              edit\n            </div>\n            <div \n              id={props.id}\n              onClick={(e)=>deleteMessage(e.target.id)}\n              className={s.deleteBtn}\n              title=\"delete message\"\n            >\n              &#10799;\n            </div>\n          </nav>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Message;","import { connect } from 'react-redux';\nimport Message from '../components/ChatList/Message/Message';\nimport { \n  toggleLike,\n  deleteMessage,\n  changeMessage,\n} from '../actions/index';\n\nconst mapStateToProps = state => ({\n  likeMessages: state.likeMessages,\n});\nconst mapDispatchToProps = {\n  toggleLike,\n  deleteMessage,\n  changeMessage,\n};\nexport const MessageContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Message);\n\nexport default MessageContainer;\n","import React from 'react';\nimport MessageContainer from '../../containers/MessageContainer';\n\n//images\nimport avatar from './Message/images/avatar.png';\n\n//styles\nimport s from './Message/styles/Message.module.scss';\n\nexport const ChatList = props => {\n  const { messages } = props;\n  console.log(messages);\n  return (\n    <section className=\"chat-list\">\n      <div className=\"content\">\n        {(messages) \n          ? <ul className=\"messages-list\">\n              {messages.map(message => (\n                <MessageContainer\n                  classWrap={(message.user === props.userName) \n                    ? `${s.wrap} ${s.myMessageWrap}` : s.wrap}\n                  classMessage={(message.user === props.userName) \n                    ? `${s.message} ${s.myMessage}` : s.message}\n                  classLikeWrap={(message.user === props.userName) \n                    ? \"display-none\" : s.messageLikeWrap}\n                  classAvatar={(message.user === props.userName) \n                    ? \"display-none\" : s.avatar}\n                  classNav={(message.user === props.userName) \n                    ? s.nav : \"display-none\"}\n                  key={message.id}\n                  id={message.id}\n                  avatar={message.avatar \n                    ? message.avatar : avatar}\n                  createdTime={message.created_at}\n                  name={message.user}\n                  message={message.message}\n                />\n            ))}\n            </ul> : null}\n      </div>\n    </section>\n  );\n}\n\nexport default ChatList;","import { connect } from 'react-redux';\nimport ChatList from '../components/ChatList/ChatList';\n\nconst mapStateToProps = state => ({\n  messages: state.messages,\n  newMessage: state.newMessage,\n  userName: state.userName,\n});\nconst mapDispatchToProps = {\n};\nexport const ChatListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ChatList);\n\nexport default ChatListContainer;\n","import React from 'react';\n\n//styles\nimport s from './styles/MessageInput.module.scss';\n\nexport const MessageInput = props => {\n  \n  const { \n    addMessage,\n    message,\n    sendMessage,\n    editId,\n    saveEditedMessage,\n    editIndex,\n  } = props;\n  console.log(editId);\n  console.log(editIndex);\n  return (\n    <div className={s.wrap}>\n      <div className={s.content}>\n        <input \n          className={s.input}\n          type=\"text\" \n          onChange={e => addMessage(e.target.value)}\n          onKeyUp={e => (e.keyCode === 13 && editId && message) \n            ? saveEditedMessage(message, editIndex) \n            : (e.keyCode === 13 && message) ? sendMessage(message): null}\n          value={message} \n          placeholder=\"Type something...\"\n        />\n        <button \n          className={s.btn} \n          onClick={()=>(message && editId) \n            ? saveEditedMessage(message, editIndex)\n            : (message) ? sendMessage(message) : null}\n        >\n          send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MessageInput;","import { connect } from 'react-redux';\nimport MessageInput from '../components/MessageInput/MessageInput';\nimport { \n  addMessage,\n  sendMessage,\n  saveEditedMessage,\n} from '../actions/index';\n\nconst mapStateToProps = state => ({\n  message: state.message,\n  editId: state.editId,\n  editIndex: state.editIndex,\n  f: state.f,\n});\nconst mapDispatchToProps = {\n  addMessage,\n  sendMessage,\n  saveEditedMessage,\n};\nexport const MessageInputContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MessageInput);\n\nexport default MessageInputContainer;\n","import React from 'react';\nimport s from './styles/Footer.module.scss'\n\nexport const Footer = () => {\n  return (\n    <footer className={s.wrap}>\n      <div className=\"content\">\n        <div className={s.inner}>\n          <nav className={s.nav}>\n            <a className={s.navLink} href=\"#\">Home</a>\n            <a className={s.navLink} href=\"#\">About</a>\n            <a className={s.navLink} href=\"#\">Contact us</a>\n          </nav>\n          <div className={s.copyright}>@ Copyright 2019</div>\n        </div>\n      </div>\n    </footer>);\n}\n\nexport default Footer;","import React from 'react';\nimport Preloader from '../Preloader/Preloader';\nimport HeaderContainer from '../../containers/HeaderContainer';\nimport ChatListContainer from '../../containers/ChatListContainer';\nimport MessageInputContainer from '../../containers/MessageInputContainer';\nimport Footer from '../Footer/Footer';\n\nexport class Chat extends React.Component {\n  componentDidMount() {\n    this.props.getMessages();\n  }\n  render() {\n    const { isFetching } = this.props;\n    return (\n      <div className=\"chat-wrap\">\n        {isFetching ? <Preloader /> : null}\n        <main className=\"main\">\n          <HeaderContainer />\n          <ChatListContainer />\n          <MessageInputContainer />\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Chat from '../components/Chat/Chat';\nimport { \n  getMessages,\n  toggleIsFetching,\n} from '../actions/index';\n\nconst mapStateToProps = state => ({\n  isFetching: state.isFetching,\n  messages: state.messages,\n});\nconst mapDispatchToProps = {\n  getMessages,\n  toggleIsFetching,\n};\nexport const ChatContainer = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Chat));\n\nexport default ChatContainer;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport LoginContainer from './containers/LoginContainer';\nimport ChatContainer from './containers/ChatContainer';\n\nexport const MainRouter = () => (\n  <Router>\n    <Route path=\"/\" exact component={LoginContainer} />\n    <Route path=\"/chat\" exact component={ChatContainer} />     \n  </Router>  \n);\n\nexport default MainRouter;\n","import React from 'react';\nimport MainRouter from './routes';\nimport './styles/App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import * as type from '../actions/actionTypes';\nimport * as moment from 'moment';\n\nexport const initialState = {\n  userName: false,\n  messages: false,\n  message: \"\",\n  isFetching: false,\n  newMessage: \"\",\n  likeMessages: [],\n  editId: false,\n  editIndex: false,\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case type.ADD_USER_NAME:\n      return { ...state, userName: action.userName };\n    case type.TOGGLE_IS_FETSHING:\n      return { ...state, isFetching: action.isFetching };\n    case type.ADD_MESSAGES:\n      return { ...state, messages: action.messages };\n    case type.ADD_MESSAGE:\n      return { ...state, message: action.message };\n    case type.SEND_MESSAGE:\n      const lastMesage = state.messages.length - 1;\n      return { ...state, messages: [ ...state.messages,  {\n        id: +[state.messages[lastMesage].id] + 1,\n        user: state.userName,\n        created_at: moment().format(\"YYYY-MM-D HH:mm:ss\"),\n        message: action.message,\n      }], message: \"\"};\n    case type.CHANGE_MESSAGE:\n        let index;\n        for (let i = 0; i < state.messages.length; i++) {\n          if (+action.id === +state.messages[i].id) {\n            index = i;\n          }\n        }\n        const editValue = (state.messages[index]) \n          ? state.messages[index].message : \"\";\n      return { ...state, editId: action.id, message: editValue, editIndex: index, };\n    case type.SAVE_EDITED_MESSAGE:\n      const messagesCopy = [...state.messages];\n      messagesCopy[action.index].message = action.message;\n      return { \n        ...state, \n          messages: [...messagesCopy], \n          message: \"\",\n          editId: false, \n          editIndex: false,\n        };\n    case type.DELETE_MESSAGE:  \n      return {  ...state, messages: \n        [ ...state.messages.filter(message => +message.id !== +action.id)]\n      };\n    case type.TOGGLE_LIKE:\n      if(state.likeMessages.includes(action.id)) {\n        const index = state.likeMessages.indexOf(action.id);\n        return { ...state, likeMessages: \n          [ ...state.likeMessages.slice(0, index), \n            ...state.likeMessages.slice(index + 1)]}\n      } \n      return { ...state, likeMessages: [...state.likeMessages, action.id] };\n      default:\n      return state;\n  }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './reducers/reducer';\nimport { initialState } from './reducers/reducer';\nimport * as serviceWorker from './serviceWorker';\n\nexport function configureStore() {\n    const store = createStore(reducer, initialState, applyMiddleware(thunk));\n    return store;\n  }\n  export const store = configureStore();\n  \n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}